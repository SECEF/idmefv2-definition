{
 "$schema": "http://json-schema.org/draft-04/schema#",
 "type": "object",
 "title": "IDMEF v0.2",
 "description": "JSON schema for the Intrusion Detection Message Exchange Format (IDMEF) version 2 (revision 0.2)",
 "definitions": {
  "uuidType": {
   "description": "Canonical textual representation for an UUID, as defined in RFC 4122 (e.g. \"e5f9bbae-163e-42f9-a2f2-0daaf78fefb1\")",
   "type": "string",
   "pattern": "^[0-9A-Fa-f]{8}(-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$"
  },
  "causeType": {
   "description": "Possible alarm causes",
   "enum": [
     "Normal", "Error", "Malicious", "Malfunction", "Natural"
   ]
  },
  "severityType": {
   "description": "Possible alarm severities",
   "enum": [
    "unknown", "low", "medium", "high", "critical", "ok", "down"
   ]
  },
  "agentCategoryType": {
   "description": "Possible agent categories",
   "enum": [
    "LFS", "PLS", "VAD", "HAR", "FRV", "VNIR", "SWIR", "LWIR", "MWIR", "ADS", "ODC",
    "AV", "NIDS", "HIDS", "DOS", "WAF", "FW", "WIDS", "NAC", "HPT", "LOG", "SIEM",
    "NMS", "LM"
   ]
  },
  "agentDataType": {
   "description": "Possible types of data/sensors",
   "enum": [
    "Light", "noise", "touch", "Images", "Vibration", "Lidar", "Thermic", "Sismic", "Temperature", "Rain", "Water", "Humidity", "Particles", "Contact", "magnetic field", "accoustics", "Fog",
    "External (web site)", "Reporting (manual)", "Connection", "Datagram", "Content", "Data", "File", "Flow", "Log", "Protocol", "Host", "Network", "Correlation", "external", "reporting", "relay", "Auth"
   ]
  },
  "agentMethodType": {
   "description": "Possible detection methods",
   "enum": [
    "biometric", "signature", "monitor", "policy", "statistical", "deep learning",
    "blackhole", "heuristic", "integrity", "honeypot", "tarpit", "recon", "X learning"
   ]
  },
  "geoLocationType": {
   "description": "Geolocation coordinates. The format for this type matches the definition for locations inside ISO 6709 (eg. \"+48.75726, +2.299528, +65.1\").",
   "type": "string"
  },
  "unLocationType": {
   "description": "A valid UN/LOCODE location (e.g. \"FR PAR\"). See also the UN/LOCODE Code List 2020-2 at https://unece.org/trade/cefact/unlocode-code-list-country-and-territory.",
   "type": "string",
   "pattern": "^[A-Z]{2} [A-Z]{3}$"
  },
  "portType": {
   "description": "A network port number. The value 0 is excluded from the range because it may not appear in an actual network connection.",
   "type": "integer",
   "minimum": 0,
   "maximum": 65535,
   "exclusiveMinimum": true
  },
  "hostnameType": {
   "description": "Ideally, a fully-qualified domain name, but we try to be lenient about the value. An empty array can also be used to explicitly state that this information could not be retrieved.",
   "oneOf": [
    {"type": "string"},
    {
     "type": "array",
     "items": [],
     "additionalItems": false
    }
   ]
  },
  "vectorCategoryType": {
   "description": "Possible categories for attack vectors",
   "enum": [
    "face", "running man", "human", "man", "woman", "chilren", "animal", "object", "blast", "fire", "wind", "snow", "rain",
    "chemical", "smoke", "vapors", "drug", "device", "drone", "car", "truck", "vehicle", "dog", "bird"
   ]
  },
  "vectorSizeType": {
   "description": "Possible sizes for attack vectors",
   "enum": [
    "small", "medium", "large", "huge"
   ]
  },
  "attachHashType": {
   "description": "A cryptographic hash acting as a checksum for some content, using the format \"function:hex-value\" (e.g. \"md5:dc89f0b4ff9bd3b061dd66bb66c991b1\").",
   "type": "string",
   "pattern": "^[a-zA-Z0-9-]+:([a-fA-F0-9]{2})+$"
  },
  "attachContentTypeType": {
   "description": "A media type, using the notation from RFC 7231, section 3.1.1.1 (e.g. \"text/plain\"). See also http://www.iana.org/assignments/media-types/media-types.xhtml",
   "type": "string"
  }
 },
 "properties": {
  "Version": {
   "description": "Version of the 7SHIELD JSON Format",
   "enum": ["0.1"]
  },
  "ID": {
   "description": "A reasonably globally unique identifier. UUID version 4 (random) or 5 (SHA-1) is recommended.",
   "$ref": "#/definitions/uuidType"
  },
  "Entity": {
   "description": "Tenant ID in case of multi-tenant (e.g. decentralised infratructure, local agency, subsidiary  company, etc.).",
   "type": "string"
  },
  "CreateTime": {
   "description": "Timestamp of the creation of the message. May point out delay between detection and processing of data.",
   "type": "string",
   "format": "date-time"
  },
  "DetectTime": {
   "description": "Timestamp of the moment of detection of event (not necessarily time of the event taking place). This timestamp is mandatory, because every detector is able to know when it detected the information - for example when line about event appeared in the logfile, or when its information source says the event was detected, or at least when it accepted the information from the source.",
   "type": "string",
   "format": "date-time"
  },
  "EventTime": {
   "description": "Deduced start of the event, or just time of the event if its solitary.",
   "type": "string",
   "format": "date-time"
  },
  "CeaseTime": {
   "description": "Deduced end of the event.",
   "type": "string",
   "format": "date-time"
  },
  "DeleteTime": {
   "description": "Timestamp of the deletion of the message. To be completed if the message has to be deleted after this delay for technical, organisational or ethical reasons.",
   "type": "string",
   "format": "date-time"
  },
  "AltNames": {
   "description": "Alternative identifiers; strings which help to pair the event to internal system information (for example tickets in request tracker systems).",
   "type": "array",
   "items": {
    "type": "string"
   }
  },
  "CorrelID": {
   "description": "Identifiers for the first 10 messages, which are information sources for creation of this message in case the message has been created based on correlation/analysis/deduction of other messages.",
   "type": "array",
   "items": {
    "$ref": "#/definitions/uuidType"
   }
  },
  "AggrCount": {
   "description": "Number of related alerts (Correlated or Aggregated)",
   "type": "integer"
  },
  "AggrID": {
   "description": "Identifiers for the first 10 messages, which are aggregated into more concise form by this message. Should be sent mostly by intermediary nodes, which detect duplicates, or aggregate events, spanning multiple detection windows, into a longer one.",
   "type": "array",
   "items": {
    "$ref": "#/definitions/uuidType"
   }
  },
  "PredID": {
   "description": "Identifiers of messages, which are obsoleted and information in them is replaced by this message. Should only be sent by detection nodes to incorporate further data about an ongoing event.",
   "type": "array",
   "items": {
    "$ref": "#/definitions/uuidType"
   }
  },
  "Cause": {
   "description": "Probable cause for the alarm. If unknown, this field should be omitted. It may be filled later on by another process or a human operator.",
   "$ref": "#/definitions/causeType"
  },
  "CategoryRef": {
   "description": "The referential used by values in the \"Category\" field.",
   "type": "string"
  },
  "Category": {
   "description": "A list of categories/subcategories this alarm belongs to.",
   "type": "array",
   "items": {
    "type": "string"
   }
  },
  "Severity": {
   "description": "The severity of the alarm.",
   "$ref": "#/definitions/severityType"
  },
  "Confidence": {
   "description": "The detector's confidence in its estimate of this particular detection (0=surely false, 1=no doubts). If omitted, the detector does not know (or has no capability to estimate the confidence).",
   "type": "number",
   "minimum": 0,
   "maximum": 1
  },
  "Description": {
   "description": "A short free-form human-readable description.",
   "type": "string"
  },
  "Ref": {
   "description": "A list of references related to the alert and/or vulnerability, and specific to this alert. Each reference may be a URL to additional information, or a URN (according to RFC 2141) in a registered IANA namespace or unregistered ad-hoc namespace bearing reasonable information value and uniqueness, such as \"urn:cve:CVE-2013-2266\".",
   "type": "array",
   "items": {
    "type": "string",
    "format": "uri"
   }
  },
  "Note": {
   "description": "A free-form human-readable note with additional information. This may be a longer description of the incident if not obvious.",
   "type": "string"
  },
  "AttachHand": {
   "description": "A list of identifiers pointing to attachments related to this event. Each value listed here must have a matching \"Handle\" inside the \"Attach\" list.",
   "type": "array",
   "items": {
    "type": "string"
   }
  },
  "Agent": {
   "description": "This object contains various information about the agent that detected the event.",
   "type": "object",
   "properties": {
    "ID": {
     "description": "A reasonably globally unique identifier. UUID version 4 (random) or 5 (SHA-1) is recommended.",
     "$ref": "#/definitions/uuidType"
    },
    "Name": {
     "description": "Name of the detector, which must be reasonably unique and bear some meaningful sense. Usually denotes the hierarchy of organisational units the detector belongs to and its own name.",
     "type": "string"
    },
    "Model": {
     "description": "Brand, model and version information about the detector.",
     "type": "string"
    },
    "Category": {
     "description": "A list of categories the detector falls into.",
     "type": "array",
     "items": {
      "$ref": "#/definitions/agentCategoryType"
     }
    },
    "Data": {
     "description": "A list of data type that detector may use during detection.",
     "type": "array",
     "items": {
      "$ref": "#/definitions/agentDataType"
     }
    },
    "Method": {
     "description": "A list of detection methods used by the detector to create alerts.",
     "type": "array",
     "items": {
      "$ref": "#/definitions/agentMethodType"
     }
    },
    "GeoLocation": {
     "description": "The detector's geolocation.",
     "$ref": "#/definitions/geoLocationType"
    },
    "UnLocation": {
     "description": "The detector's UN/LOCODE location.",
     "$ref": "#/definitions/unLocationType"
    },
    "Location": {
     "description": "Internal location of the agent/sensor.",
     "type": "string"
    },
    "Hostname": {
     "description": "Hostname of this agent/sensor. Should be a fully qualified domain name, but may not conform exactly because values extracted from logs, messages, DNS, etc. may themselves be malformed. An empty array can be used to explicitly indicate that this value has been inquired and could not be found (e.g. due to a missing entry in the DNS infrastructure).",
     "$ref": "#/definitions/hostnameType"
    },
    "IP4": {
     "description": "The detector's IPv4 address.",
     "type": "string",
     "format": "ipv4"
    },
    "IP6": {
     "description": "The detector's IPv6 address.",
     "type": "string",
     "format": "ipv6"
    },
    "Azimuth": {
     "description": "Detection direction azimuth (-180°, +180°).",
     "type": "number"
    },
    "Elevation": {
     "description": "Detection direction elevation (-90°, +90°).",
     "type": "number"
    },
    "Range": {
     "description": "Detection range (in meters).",
     "type": "number"
    },
    "HFOV": {
     "description": "Horizontal Field Of View.",
     "type": "number"
    },
    "VFOV": {
     "description": "Vertical Field Of View.",
     "type": "number"
    },
    "CyberDetectZone": {
     "description": "A list of networks monitored by the detector, in CIDR notation.",
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   },
   "required": [
    "ID",
    "IP4",
    "IP6"
   ]
  },
  "Source": {
   "description": "A list of sources implicated in the incident.",
   "type": "array",
   "items": {
    "type": "object",
    "properties": {
     "GeoLocation": {
      "description": "The source's geolocation.",
      "$ref": "#/definitions/geoLocationType"
     },
     "UnLocation": {
      "description": "The source's UN/LOCODE location.",
      "$ref": "#/definitions/unLocationType"
     },
     "Location": {
      "description": "Internal location description (if the source is internal)",
      "type": "string"
     },
     "Note": {
      "description": "A free-form human-readable note with additional information about the source.",
      "type": "string"
     },
     "Hostname": {
      "description": "A list of hostnames for this source. Should be a fully qualified domain name, but may not conform exactly because values extracted from logs, messages, DNS, etc. may themselves be malformed. An empty array can be used to explicitly indicate that this value has been inquired and could not be found (e.g. due to a missing entry in the DNS infrastructure).",
      "type": "array",
      "items": {
       "$ref": "#/definitions/hostnameType"
      }
     },
     "User": {
      "description": "A list of known identifiers for users related to this source.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Email": {
      "description": "A list of known email addresses for this source (for example the \"Reply-To\" address in a phishing message).",
      "type": "array",
      "items": {
       "type": "string",
       "format": "email"
      }
     },
     "IP4": {
      "description": "A list of known IPv4 addresses for this source.",
      "type": "array",
      "items": {
       "type": "string",
       "format": "ipv4"
      }
     },
     "IP6": {
      "description": "A list of known IPv6 addresses for this source.",
      "type": "array",
      "items": {
       "type": "string",
       "format": "ipv6"
      }
     },
     "Proto": {
      "description": "Protocols related to connections from this source. When several protocols are stacked, they must be ordered from the lowest (the closest to the medium) to the highest (the closest to the application) according to the ISO/OSI model.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Port": {
      "description": "A list of source network ports that took part in the incident.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/portType"
      }
     },
     "AttachHand": {
      "description": "A list of identifiers pointing to attachments related to this source. Each value listed here must have a matching \"Handle\" inside the \"Attach\" list.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   }
  },
  "Target": {
   "description": "A list of targets implicated in the incident.",
   "type": "array",
   "items": {
    "type": "object",
    "properties": {
     "GeoLocation": {
      "description": "The target's geolocation.",
      "$ref": "#/definitions/geoLocationType"
     },
     "UnLocation": {
      "description": "The target's UN/LOCODE location.",
      "$ref": "#/definitions/unLocationType"
     },
     "Location": {
      "description": "Internal location of this target. If unknown/unidentified, the name of the tenant may be used.",
      "type": "string"
     },
     "Note": {
      "description": "A free-form human-readable note with additional information about the target.",
      "type": "string"
     },
     "Hostname": {
      "description": "A list of hostnames for this target. Should be a fully qualified domain name, but may not conform exactly because values extracted from logs, messages, DNS, etc. may themselves be malformed. An empty array can be used to explicitly indicate that this value has been inquired and could not be found (e.g. due to a missing entry in the DNS infrastructure).",
      "type": "array",
      "items": {
       "$ref": "#/definitions/hostnameType"
      }
     },
     "Service": {
      "description": "A list of services related to this target.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "User": {
      "description": "A list of known identifiers for users related to this target.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Email": {
      "description": "A list of known email addresses for this target.",
      "type": "array",
      "items": {
       "type": "string",
       "format": "email"
      }
     },
     "IP4": {
      "description": "A list of known IPv4 addresses for this target.",
      "type": "array",
      "items": {
       "type": "string",
       "format": "ipv4"
      }
     },
     "IP6": {
      "description": "A list of known IPv6 addresses for this target.",
      "type": "array",
      "items": {
       "type": "string",
       "format": "ipv6"
      }
     },
     "Port": {
      "description": "A list of target network ports that took part in the incident.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/portType"
      }
     },
     "AttachHand": {
      "description": "A list of identifiers pointing to attachments related to this target. Each value listed here must have a matching \"Handle\" inside the \"Attach\" list.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    },
    "required": [
     "Port",
     "IP6",
     "IP4"
    ]
   }
  },
  "Vector": {
   "description": "A list of vectors used during the incident (e.g. attack vectors).",
   "type": "array",
   "items": {
    "type": "object",
    "properties": {
     "Category": {
      "description": "The vector's category.",
      "$ref": "#/definitions/vectorCategoryType"
     },
     "Name": {
      "description": "A short human-readable name for the vector (e.g. \"dog\").",
      "type": "string"
     },
     "Size": {
      "description": "A rough estimation of the vector's size.",
      "$ref": "#/definitions/vectorSizeType"
     },
     "UnLocation": {
      "description": "The vector's UN/LOCODE location.",
      "$ref": "#/definitions/unLocationType"
     },
     "GeoLocation": {
      "description": "The vector's geolocation.",
      "$ref": "#/definitions/geoLocationType"
     },
     "GeoRadius": {
      "description": "An estimate of the vector's radius around the given geolocation (in meters). The estimate may be very precise or very approximative (e.g. 100 m).",
      "type": "number"
     },
     "Location": {
      "description": "Internal location of this vector. If unknown/unidentified, the name of the tenant may be used.",
      "type": "string"
     },
     "Note": {
      "description": "A free-form human-readable note with additional information about the vector.",
      "type": "string"
     }
    },
    "required": [
     "Category"
    ]
   }
  },
  "Attach": {
   "description": "A list of attachments related to the incident.",
   "type": "array",
   "items": {
    "type": "object",
    "properties": {
     "Handle": {
      "description": "A unique identifier used to reference attachments.",
      "type": "string"
     },
     "FileName": {
      "description": "A list of names for the attached file.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Hash": {
      "description": "A list of hash checksums for the attachment's content. The use of SHA-2 or SHA-3 to produce such checksums is recommended.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/attachHashType"
      }
     },
     "Size": {
      "description": "The content's length (in bytes).",
      "type": "integer"
     },
     "Ref": {
      "description": "A list of references related to the attachment. Each reference may be a URL to additional information, or a URN (according to RFC 2141) in a registered IANA namespace or unregistered ad-hoc namespace bearing reasonable information value and uniqueness, such as \"urn:clamav:Win.Trojan.Banker-14334\".",
      "type": "array",
      "items": {
       "type": "string",
       "format": "uri"
      }
     },
     "ExternalURI": {
      "description": "A list of URIs pointing to external copies of the attachment (e.g. if its content is available online and/or recognizable from an external source). Each entry will usually be a URL, but may also be a URN (according to RFC 2141) in a registered IANA namespace or unregistered ad-hoc namespace bearing reasonable information value and uniqueness, such as \"urn:mhr:55eaf7effadc07f866d1eaed9c64e7ee49fe081a\" or \"magnet:?xt=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C\".",
      "type": "array",
      "items": {
       "type": "string",
       "format": "uri"
      }
     },
     "Note": {
      "description": "A free-form human-readable note with additional information about the attachment.",
      "type": "string"
     },
     "ContentType": {
      "description": "The Internet Media Type for the attachment, using the format defined in RFC 2046 and related documents. IANA-registered types are preferred, but unofficial media types may also be used.",
      "$ref": "#/definitions/attachContentTypeType"
     },
     "ContentEncoding": {
      "description": "A specific encoding used for the transmission of the content (e.g. \"base64\"). If omitted, native JSON encoding is assumed.",
      "type": "string",
      "default": "json"
     },
     "Content": {
      "description": "The attachment's content, transformed using the encoding scheme listed in the \"ContentEncoding\" field.",
      "type": "string"
     }
    },
    "required": [
     "Handle",
     "Content"
    ]
   }
  }
 },
 "required": [
  "Version",
  "ID",
  "CreateTime",
  "CategoryRef",
  "Category"
 ]
}
